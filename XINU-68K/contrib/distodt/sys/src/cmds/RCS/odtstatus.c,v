head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	92.01.04.03.43.43;	author muckel;	state Exp;
branches;
next	1.2;

1.2
date	91.11.25.05.29.31;	author muckel;	state Exp;
branches;
next	1.1;

1.1
date	91.11.25.02.05.30;	author muckel;	state Exp;
branches;
next	;


desc
@@


1.3
log
@/dev/null
@
text
@/* 
 * odtstatus.c - This program prints both frontend and backend status
 * 
 * Author:	Jim Griffioen
 * 		Dept. of Computer Sciences
 * 		Purdue University
 * Date:	Fri Jun 10 11:20:43 1988
 *
 * Copyright (c) 1988 Jim Griffioen
 */

#include <stdio.h>

#include "bed.h"

int errno;	        	/* error number when system err	*/

extern void setupopt();
extern char * nextopt();
extern char * nextarg();
extern char * nextword();

/*---------------------------------------------------------------------------
 * main ( csb, rgsb )
 *---------------------------------------------------------------------------
 */
main ( csb, rgsb )
    int csb;
    char *rgsb[];
{
	char verbose;
	struct bm bm;
	int fd_sock;
	char * option;
	
	verbose = 0;
	setupopt( csb, rgsb );
	for ( option = nextopt(); option != NULL; option = nextopt() ) {
		if ( strequ( option, "-v" ) ) {
			verbose = 1;
		}
		else {
			printusage("error: unexpected argument '%s'\n",option);
		}
	}
	if ( ( option = nextword() ) != NULL ) {
		printusage( "error: unexpected argument '%s'\n", option );
	}

	if ( verbose ) {
		printf( "Issuing broadcast message\n" );
	}
	if ( ( fd_sock = statusrequest() ) < 0 ) {
		exit( 1 );
	}
	while ( TRUE ) {
		if ( statusrecv( fd_sock, &bm ) <= 0 ) {
			break;
		}
		printstatus( (struct statresp *) bm.detail );
	}
}


/*---------------------------------------------------------------------------
 * printusage
 *---------------------------------------------------------------------------
 */
printusage( sb, w1, w2 )
     char *sb;
     int w1, w2;
{
	fprintf( stderr, sb, w1, w2 );
	fprintf( stderr, "usage: odtstatus [-v]\n" );
	exit( 1 );
}
	

@


1.2
log
@/dev/null
@
text
@d2 1
a2 1
 * status.c - This program prints both frontend and backend status
a31 1
	char bedserversfile[ MAXFILENAME ];
a36 2
	bedserversfile[0] = '\0';
	bedserversfile[ MAXMACHINENAME - 1 ] = '\0';
a41 6
		else if ( strequ( option, "-b" ) ) {
			if ( ( option = nextarg() ) == NULL ) {
				printusage("error: missing bedservers file\n");
			}
			strncpy( bedserversfile, option, MAXFILENAME - 1 );
		}
d53 1
a53 1
	if ( ( fd_sock = statusrequest( bedserversfile ) ) < 0 ) {
d74 1
a74 1
	fprintf( stderr, "usage: status [-v] [-b FILE]\n" );
@


1.1
log
@Initial revision
@
text
@d24 1
a24 1
 * main ( csb , rgsb )
d27 1
a27 1
main ( csb , rgsb )
d40 1
a40 1
	setupopt( csb , rgsb );
d42 1
a42 1
		if ( strequ( option , "-v" ) ) {
d45 1
a45 1
		else if ( strequ( option , "-b" ) ) {
d49 1
a49 1
			strncpy( bedserversfile , option , MAXFILENAME - 1 );
d56 1
a56 1
		printusage( "error: unexpected argument '%s'\n" , option );
d66 1
a66 1
		if ( statusrecv( fd_sock , &bm ) <= 0 ) {
d78 1
a78 1
printusage( sb , w1 , w2 )
d80 1
a80 1
     int w1 , w2;
d82 2
a83 2
	fprintf( stderr , sb , w1 , w2 );
	fprintf( stderr , "usage: status [-v] [-b FILE]\n" );
@
