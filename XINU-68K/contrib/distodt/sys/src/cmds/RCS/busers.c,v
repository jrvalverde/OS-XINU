head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	92.01.04.03.43.28;	author muckel;	state Exp;
branches;
next	1.2;

1.2
date	91.11.25.05.29.04;	author muckel;	state Exp;
branches;
next	1.1;

1.1
date	91.11.25.02.05.30;	author muckel;	state Exp;
branches;
next	;


desc
@@


1.3
log
@/dev/null
@
text
@
/* busers.c - This program list the backend user - similar to the old lusers
 * 
 * Author:	Jim Griffioen
 * 		Dept. of Computer Sciences
 * 		Purdue University
 * Date:	Thu May 26 23:07:00 1988
 */

#include <stdio.h>

#include "bed.h"

int errno;	        	/* error number when system err	*/

extern void setupopt();
extern char * nextopt();
extern char * nextarg();
extern char * nextword();

/*---------------------------------------------------------------------------
 * main (csb, rgsb)
 *---------------------------------------------------------------------------
 */
main ( csb, rgsb )
    int csb;
    char *rgsb[];
{
	char verbose;
	struct bm bm;
	int fd_sock;
	
	char * option;
	verbose = 0;
	setupopt( csb, rgsb );
	for ( option = nextopt(); option != NULL; option = nextopt() ) {
		if ( strequ( option, "-v" ) ) {
			verbose = 1;
		}
		else {
			printusage("error: unexpected argument '%s'\n",option);
		}
	}
	if ( ( option = nextword() ) != NULL ) {
		printusage( "error: unexpected argument '%s'\n", option );
	}

	if ( verbose ) {
		printf( "Issuing broadcast message\n" );
	}
	if ( ( fd_sock = statusrequest() ) < 0 ) {
		exit( 1 );
	}
	while ( TRUE ) {
		if ( statusrecv( fd_sock, &bm ) <= 0 ) {
			break;
		}
		printbusers( (struct statresp *) bm.detail );
	}
}


/*---------------------------------------------------------------------------
 * printusage
 *---------------------------------------------------------------------------
 */
printusage( sb, w1, w2 )
    char *sb;
    int w1, w2;
{
	fprintf( stderr, sb, w1, w2 );
	fprintf( stderr, "usage: busers [-v]\n" );
	exit( 1 );
}
	




@


1.2
log
@/dev/null
@
text
@a29 1
	char bedserversfile[ MAXFILENAME ];
a34 2
	bedserversfile[0] = '\0';
	bedserversfile[ MAXMACHINENAME - 1 ] = '\0';
a39 6
		else if ( strequ( option, "-b" ) ) {
			if ( ( option = nextarg() ) == NULL ) {
				printusage("error: missing bedservers file\n");
			}
			strncpy( bedserversfile, option, MAXFILENAME - 1 );
		}
d51 1
a51 1
	if ( ( fd_sock = statusrequest( bedserversfile ) ) < 0 ) {
d72 1
a72 1
	fprintf( stderr, "usage: busers [-v] [-b FILE]\n" );
@


1.1
log
@Initial revision
@
text
@d25 1
a25 1
main ( csb , rgsb )
d38 1
a38 1
	setupopt( csb , rgsb );
d40 1
a40 1
		if ( strequ( option , "-v" ) ) {
d43 1
a43 1
		else if ( strequ( option , "-b" ) ) {
d47 1
a47 1
			strncpy( bedserversfile , option , MAXFILENAME - 1 );
d54 1
a54 1
		printusage( "error: unexpected argument '%s'\n" , option );
d64 1
a64 1
		if ( statusrecv( fd_sock , &bm ) <= 0 ) {
d76 1
a76 1
printusage( sb , w1 , w2 )
d80 2
a81 2
	fprintf( stderr , sb , w1 , w2 );
	fprintf( stderr , "usage: busers [-v] [-b FILE]\n" );
@
