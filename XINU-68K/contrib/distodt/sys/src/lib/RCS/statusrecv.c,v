head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	91.11.25.09.42.19;	author muckel;	state Exp;
branches;
next	1.3;

1.3
date	91.11.25.05.49.23;	author muckel;	state Exp;
branches;
next	1.2;

1.2
date	91.11.25.05.28.35;	author muckel;	state Exp;
branches;
next	1.1;

1.1
date	91.11.25.02.06.04;	author muckel;	state Exp;
branches;
next	;


desc
@@


1.4
log
@/dev/null
@
text
@/* statusrecv.c - 
 * 
 * Author:	Jim Griffioen
 * 		Dept. of Computer Sciences
 * 		Purdue University
 * Date:	Fri May 20 11:57:03 1988
 */


#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>

#include <setjmp.h>
#include <errno.h>

#include "bed.h"
#include "netutils.h"

extern jmp_buf env;		/* used to return from read time-outs	*/
extern int errno;		/* error number when system err		*/

extern char *xmalloc();

#define MAXBEDS		200
#define MAXLINE 	256


/*----------------------------------------------------------------------
 * statusrecv - obtain status info from all front ends
 *----------------------------------------------------------------------
 */
int
statusrecv( fd_sock, pbm )
     int fd_sock;
     struct bm * pbm;
{
	int len;
        struct sockaddr_in sa;
        int salen;
	
	settimer(STATTIMEOUT);
	if ( setjmp( env ) == EINTR ) {
		canceltimer();
		return( 0 );		/* return number of machines	*/
	}
        salen = sizeof( struct sockaddr_in );
        len = recvfrom( fd_sock , pbm , lbm , 0 , & sa , & salen );
	if ( len <= 0 ) {
		canceltimer();
		fprintf( stderr, "error: recvfrom failed\n" );
		return( -1 );
	}
	canceltimer();
	return( 1 );
}

@


1.3
log
@*** empty log message ***
@
text
@a13 1
#include <arpa/inet.h>
@


1.2
log
@/dev/null
@
text
@d30 1
d41 2
a43 1
	
d49 2
a50 1
	len = recvfrom( fd_sock, pbm, lbm, 0, 0, 0 );
@


1.1
log
@Initial revision
@
text
@d35 1
a35 1
statusrecv( fd_sock , pbm )
a38 2
	struct sockaddr_in sa;
	int salen;
d47 1
a47 2
	salen = sizeof( struct sockaddr_in );
	len = recvfrom( fd_sock , pbm , lbm , 0 , & sa , & salen );
d50 1
a50 1
		fprintf( stderr , "error: recvfrom failed\n" );
@
